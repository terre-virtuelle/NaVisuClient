//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.12.03 at 09:49:42 AM CET 
//
package bzh.terrevirtuelle.navisu.domain.gpx.model;

import bzh.terrevirtuelle.navisu.domain.navigation.model.NavigationData;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 *
 * GPX documents contain a metadata header, followed by waypoints, routes, and
 * tracks. You can add your own elements to the extensions section of the GPX
 * document.
 *
 *
 * <p>
 * Java class for gpxType complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="gpxType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="metadata" type="{http://www.topografix.com/GPX/1/1}metadataType" minOccurs="0"/>
 *         &lt;element name="wpt" type="{http://www.topografix.com/GPX/1/1}wptType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="rte" type="{http://www.topografix.com/GPX/1/1}rteType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="trk" type="{http://www.topografix.com/GPX/1/1}trkType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="extensions" type="{http://www.topografix.com/GPX/1/1}extensionsType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="version" use="required" type="{http://www.w3.org/2001/XMLSchema}string" fixed="1.1" />
 *       &lt;attribute name="creator" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "gpx", propOrder = {
    "wpt",
    "rte",
    "trk",
    "extensions",
    "boundaries",
    "highway"
})
@XmlRootElement
public class Gpx
        implements NavigationData {

    protected List<Waypoint> wpt;
    protected List<Route> rte;
    protected List<Track> trk;
    protected Extensions extensions;
    protected Boundaries boundaries;
    protected Highway highway;
    @XmlAttribute(name = "version", required = true)
    protected String version;
    @XmlAttribute(name = "creator", required = true)
    protected String creator;

    public Gpx() {
        wpt = new ArrayList<>();
        rte = new ArrayList<>();
        trk = new ArrayList<>();
        boundaries = new Boundaries();
        highway = new Highway();

    }

    public Gpx(List<Waypoint> wpt, List<Route> rte, List<Track> trk, Extensions extensions, Boundaries boundaries, Highway highway, String version, String creator) {
        this.wpt = wpt;
        this.rte = rte;
        this.trk = trk;
        this.extensions = extensions;
        this.boundaries = boundaries;
        this.highway = highway;
        this.version = version;
        this.creator = creator;
    }

    public Gpx(List<Waypoint> wpt, List<Route> rte, List<Track> trk,
            Extensions extensions, String version, String creator) {
        this.wpt = wpt;
        this.rte = rte;
        this.trk = trk;
        this.extensions = extensions;
        this.version = version;
        this.creator = creator;
    }

    public Gpx(List<Waypoint> wpt, List<Route> rte, List<Track> trk, Extensions extensions, Boundaries boundaries, String version, String creator) {
        //  this.metadata = metadata;
        this.wpt = wpt;
        this.rte = rte;
        this.trk = trk;
        this.extensions = extensions;
        this.boundaries = boundaries;
        this.version = version;
        this.creator = creator;
    }

    /**
     * Gets the value of the wpt property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the wpt property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     * getWaypoint().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Waypoint }
     *
     *
     * @return
     */
    public List<Waypoint> getWpt() {
        if (wpt == null) {
            wpt = new ArrayList<>();
        }
        return this.wpt;
    }

    /**
     * Gets the value of the rte property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the rte property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     * getRoute().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list {@link Route }
     *
     *
     * @return
     */
    public List<Route> getRte() {
        if (rte == null) {
            rte = new ArrayList<>();
        }
        return this.rte;
    }

    /**
     * Gets the value of the trk property.
     *
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the trk property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     * getTrack().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list {@link Track }
     *
     *
     */
    public List<Track> getTrk() {
        if (trk == null) {
            trk = new ArrayList<Track>();
        }
        return this.trk;
    }

    /**
     * Gets the value of the extensions property.
     *
     * @return possible object is {@link Extensions }
     *
     */
    public Extensions getExtensions() {
        return extensions;
    }

    /**
     * Sets the value of the extensions property.
     *
     * @param value allowed object is {@link Extensions }
     *
     */
    public void setExtensions(Extensions value) {
        this.extensions = value;
    }

    /**
     * Gets the value of the version property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getVersion() {
        if (version == null) {
            return "1.0";
        } else {
            return version;
        }
    }

    /**
     * Sets the value of the version property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the creator property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getCreator() {
        return creator;
    }

    /**
     * Sets the value of the creator property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setCreator(String value) {
        this.creator = value;
    }

    public Boundaries getBoundaries() {
        return boundaries;
    }

    public void setBoundaries(Boundaries boundaries) {
        this.boundaries = boundaries;

    }

    public Highway getHighway() {
        return highway;
    }

    public void setHighway(Highway highway) {
        this.highway = highway;
    }

    @Override
    public String getGeometry() {
        String geom = "MULTIPOINT(";
        int size = wpt.size() - 1;
        for (int i = 0; i < size; i++) {
            geom += wpt.get(i).longitude + " " + wpt.get(i).latitude;
            geom += ",";
        }
        geom += wpt.get(size - 1).longitude + " " + wpt.get(size - 1).latitude + ")";

        return geom;
    }

    @Override
    public String toString() {
        return "Gpx{" + "wpt=" + wpt + ", rte=" + rte + ", trk=" + trk + ", extensions=" + extensions + ", boundaries=" + boundaries + ", highway=" + highway + ", version=" + version + ", creator=" + creator + '}';
    }

    @Override
    public double getLatitude() {
        if (highway != null) {
            return highway.getLatitude();
        } else {
            return 0.0;
        }
    }

    @Override
    public double getLongitude() {
        if (highway != null) {
            return highway.getLongitude();
        } else {
            return 0.0;
        }
    }

}
