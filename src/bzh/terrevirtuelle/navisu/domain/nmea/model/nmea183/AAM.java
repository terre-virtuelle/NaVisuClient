/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bzh.terrevirtuelle.navisu.domain.nmea.model.nmea183;

import bzh.terrevirtuelle.navisu.domain.nmea.model.NMEA;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Waypoint Arrival Alarm is generated by some units to indicate the
 * status of arrival (entering the arrival circle, or passing the perpendicular
 * of the course line) at the destination waypoint.
 * @author Camille AUBRY, Alexis BURGER, Chintana CHANTHABOURY, Teddy VALLEE,
 * @author Serge Morvan 
 */
@XmlRootElement(name="AAM")
@XmlAccessorType(XmlAccessType.FIELD)
public class AAM extends NMEA implements NMEAI {

    private String arrivalCircleEntered;
    private String perpendicularPassed;
    private float circleRadius;
    private String waypointName;

    /**
     *
     * @param device
     * @param sentence
     * @param arrivalCircleEntered
     * @param perpendicularPassed
     * @param circleRadius
     * @param waypointName
     */
    public AAM(
            String device,
            String sentence,
            String arrivalCircleEntered,
            String perpendicularPassed,
            float circleRadius,
            String waypointName) {
        super(device, sentence);
        this.arrivalCircleEntered = arrivalCircleEntered;
        this.perpendicularPassed = perpendicularPassed;
        this.circleRadius = circleRadius;
        this.waypointName = waypointName;
    }

    public AAM() {
    }

    /**
     *
     * @return
     */
    @Override
    public String getArrivalCircleEntered() {
        return arrivalCircleEntered;
    }

    /**
     *
     * @param arrivalCircleEntered
     */
    @Override
    public void setArrivalCircleEntered(String arrivalCircleEntered) {
        this.arrivalCircleEntered = arrivalCircleEntered;
    }

    /**
     *
     * @return
     */
    @Override
    public float getCircleRadius() {
        return circleRadius;
    }

    /**
     *
     * @param circleRadius
     */
    @Override
    public void setCircleRadius(float circleRadius) {
        this.circleRadius = circleRadius;
    }

    /**
     *
     * @return
     */
    @Override
    public String getPerpendicularPassed() {
        return perpendicularPassed;
    }

    /**
     *
     * @param perpendicularPassed
     */
    @Override
    public void setPerpendicularPassed(String perpendicularPassed) {
        this.perpendicularPassed = perpendicularPassed;
    }

    /**
     *
     * @return
     */
    @Override
    public String getWaypointName() {
        return waypointName;
    }

    /**
     *
     * @param waypointName
     */
    @Override
    public void setWaypointName(String waypointName) {
        this.waypointName = waypointName;
    }

    /**
     *
     * @return
     */
    @Override
    public String toString() {
        return "AAM{" + "arrivalCircleEntered=" + arrivalCircleEntered + ", perpendicularPassed=" + perpendicularPassed + ", circleRadius=" + circleRadius + ", waypointName=" + waypointName + '}';
    }
}
